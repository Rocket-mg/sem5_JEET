/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import lab1.derby_hw.Lab1Derby_HW;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import static lab1.derby_hw.Lab1Derby_HW.QUERY;
/**
 *
 * @author Rocket
 */
public class DbOkno extends javax.swing.JFrame {
    private static Lab1Derby_HW conn;
    private boolean connect;
    private String out;
    /**
     * Creates new form DbOkno
     */
    public DbOkno() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tPole = new javax.swing.JTextArea();
        ConnectButton = new javax.swing.JButton();
        DisconnectButton = new javax.swing.JButton();
        Show_DBButton = new javax.swing.JButton();
        LabelInfo = new javax.swing.JLabel();
        RefreshButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Field_ID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Field_NAME = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Field_AUTHOR = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Field_GENRE = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Field_MATERIAL = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Field_USDPRICE = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Checkbox_MP = new javax.swing.JCheckBox();
        NewRecordButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tPole.setColumns(20);
        tPole.setRows(5);
        jScrollPane1.setViewportView(tPole);

        ConnectButton.setText("Connect");
        ConnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectButtonActionPerformed(evt);
            }
        });

        DisconnectButton.setText("Disconnect");
        DisconnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisconnectButtonActionPerformed(evt);
            }
        });

        Show_DBButton.setText("Show DB");
        Show_DBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Show_DBButtonActionPerformed(evt);
            }
        });

        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        jLabel2.setText("NAME");

        jLabel3.setText("AUTHOR");

        jLabel4.setText("GENRE");

        jLabel5.setText("MATERIAL");

        jLabel6.setText("USD PRICE");

        jLabel7.setText("MUSEUM PROPERTY");

        NewRecordButton.setText("New Record");
        NewRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewRecordButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Field_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Field_NAME, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Field_AUTHOR, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Field_GENRE, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Field_MATERIAL, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Field_USDPRICE, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Checkbox_MP)
                        .addGap(18, 18, 18)
                        .addComponent(NewRecordButton)
                        .addGap(38, 38, 38))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ConnectButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DisconnectButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Show_DBButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(RefreshButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DeleteButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(UpdateButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(LabelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(LabelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConnectButton)
                    .addComponent(DisconnectButton)
                    .addComponent(Show_DBButton)
                    .addComponent(RefreshButton)
                    .addComponent(DeleteButton)
                    .addComponent(UpdateButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(Field_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(Field_NAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(Field_AUTHOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(Field_GENRE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(Field_MATERIAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(Field_USDPRICE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)
                                .addComponent(Checkbox_MP))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(NewRecordButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectButtonActionPerformed
        // TODO add your handling code here:
        try {
            connect = Lab1Derby_HW.Connect();
            } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(DbOkno.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (connect) {
                LabelInfo.setText("Połączono");
            } else {
                LabelInfo.setText("Nie połączono");
        }
    }//GEN-LAST:event_ConnectButtonActionPerformed

    private void DisconnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisconnectButtonActionPerformed
        // TODO add your handling code here:
        try {
            connect = Lab1Derby_HW.Disconnect();
            } catch (SQLException ex) {
            Logger.getLogger(DbOkno.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (connect) {
                LabelInfo.setText("Rozłączono");
            } else {
            LabelInfo.setText("Nie rozłączono");
            } 
    }//GEN-LAST:event_DisconnectButtonActionPerformed

    private void Show_DBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Show_DBButtonActionPerformed
        // TODO add your handling code here:
        try {
            if (connect) {
                out = Lab1Derby_HW.getData();
                tPole.removeAll();
                tPole.setText(out);
            } else {
                LabelInfo.setText("Nie połączono");
            }
        } catch (SQLException ex) {
        Logger.getLogger(DbOkno.class.getName()).log(Level.SEVERE, null, ex);}
    }//GEN-LAST:event_Show_DBButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void NewRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewRecordButtonActionPerformed
        // TODO add your handling code here:
       /* String ID1 = Field_ID.getText();
        int ID = Integer.valueOf(ID1);
        String NAME = Field_NAME.getText();
        String AUTHOR = Field_AUTHOR.getText();
        String GENRE = Field_GENRE.getText();
        String MATERIAL = Field_MATERIAL.getText();
        String USDP = Field_USDPRICE.getText();
        int USD_PRICE = Integer.valueOf(USDP);
        boolean MP = Checkbox_MP.isSelected();*/
       
       
       try {
            if (connect) {
                out = Lab1Derby_HW.Insert("INSERT INTO APP.SCULPTURES (SCULPTURE_ID, NAME, AUTHOR, GENRE, MATERIAL, USD_PRICE, MUSEUM_PROPERTY) VALUES (12, 'Angel of te North', 'Antony Gormley', 'minimalism', 'steel', 1500, false)");
                tPole.removeAll();
                tPole.setText(out);
            } else {
                LabelInfo.setText("Nie połączono");
            }
        } catch (SQLException ex) {
        Logger.getLogger(DbOkno.class.getName()).log(Level.SEVERE, null, ex);
        LabelInfo.setText("Error");}
        
        
       
       
       /* if (connect) {
            //out =
            tPole.removeAll();
            //tPole.setText(String.valueOf(x));
        } else {
            LabelInfo.setText("Nie połączono");
        } /* Connection con = null;
        Statement st = null;
        //ResultSet rs = null;
        try{
        LabelInfo.setText("x");
        String query = "select * from app.sculptures ";
        //String query = "SELECT sculpture_id FROM app.sculptures ORDER BY sculpture_id DESC fetch first 1 rows only";
        con = DriverManager.getConnection("jdbc:derby:./db/Rocket-mg_db");
        //st = con.createStatement();
        Statement stat = con.createStatement();
        ResultSet rs = stat.executeQuery(query);
        // ResultSetMetaData rsmd = rs.getMetaData();
        //
        //
        // rs = st.executeQuery(query);
        //ResultSetMetaData rsmd = rs.getMetaData();
        //st.executeUpdate(query);
        String wyn = rs.getString("sculpture_id");
        LabelInfo.setText(wyn);
        }catch(Exception ex){
        LabelInfo.setText("It was not possible to execute Query");}*/
    }//GEN-LAST:event_NewRecordButtonActionPerformed
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DbOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DbOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DbOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DbOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DbOkno().setVisible(true);
        });
    }

     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Checkbox_MP;
    private javax.swing.JButton ConnectButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton DisconnectButton;
    private javax.swing.JTextField Field_AUTHOR;
    private javax.swing.JTextField Field_GENRE;
    private javax.swing.JTextField Field_ID;
    private javax.swing.JTextField Field_MATERIAL;
    private javax.swing.JTextField Field_NAME;
    private javax.swing.JTextField Field_USDPRICE;
    private javax.swing.JLabel LabelInfo;
    private javax.swing.JButton NewRecordButton;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JButton Show_DBButton;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea tPole;
    // End of variables declaration//GEN-END:variables
}