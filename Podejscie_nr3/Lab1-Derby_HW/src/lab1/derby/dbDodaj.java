/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab1.derby;
import lab1.derby.DbOkno;
import java.sql.ResultSet;
import java.sql.Statement;

/**
 *
 * @author student
 */
public class dbDodaj extends javax.swing.JFrame {

    /**
     * Creates new form dbDodaj
     */
    public dbDodaj() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infoLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        fieldName = new javax.swing.JTextField();
        fieldAuthor = new javax.swing.JTextField();
        fieldGendre = new javax.swing.JTextField();
        fieldMaterial = new javax.swing.JTextField();
        fieldUSD = new javax.swing.JTextField();
        checkboxMP = new javax.swing.JCheckBox();
        bttnAddSculpture = new javax.swing.JButton();
        labelInfo = new javax.swing.JLabel();

        fieldName.setText("Name");
        fieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNameActionPerformed(evt);
            }
        });

        fieldAuthor.setText("Author");
        fieldAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldAuthorActionPerformed(evt);
            }
        });

        fieldGendre.setText("Gendre");

        fieldMaterial.setText("Material");

        fieldUSD.setText("USD price");

        checkboxMP.setText("Museum property");

        bttnAddSculpture.setText("Add Sculpture");
        bttnAddSculpture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnAddSculptureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(fieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldGendre, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldUSD, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelInfo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bttnAddSculpture)
                    .addComponent(checkboxMP))
                .addGap(0, 24, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldGendre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldUSD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkboxMP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnAddSculpture)
                    .addComponent(labelInfo)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(infoLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(infoLabel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNameActionPerformed

    private void fieldAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldAuthorActionPerformed

    private void bttnAddSculptureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnAddSculptureActionPerformed
        // TODO add your handling code here:
        try {
            Statement st = null;
            st = DbManager.conn.createStatement();
            //String getNmbID = "select count(ID) as nmbsID from app.sculptures";
            //System.out.println("dziala");
            /*String getNmbID = "SELECT min(t2.sculpture_id)  as tt\n" +
                                "FROM    app.sculptures t1\n" +
                                "full  JOIN app.sculptures t2\n" +
                                "ON      t1.sculpture_id +1  = t2.sculpture_id\n" +
                                "where t1.sculpture_id is null and t2.sculpture_id <> 1";*/
            String getNmbID = "select sculpture_id from app.SCULPTURES order by sculpture_id asc";
            //System.out.println("dziala2");
            int nmbID = 0;
            ResultSet rs = st.executeQuery(getNmbID);
            int pom = 0;
            while(rs.next()){
                //nmbID = rs.getInt("nmbsID");
                nmbID = rs.getInt("sculpture_id");
                if(nmbID!=(pom+1)) break;
                pom = pom + 1;
            }
            //tPole.setText(Integer.toString(nmbID));
            //tPole.setText("dziala");
            nmbID++;
            pom++;
            //System.out.println("ID: "+nmbID);
            System.out.println("dodanie o ID: "+pom);
            String dodaj = "INSERT INTO APP.sculptures VALUES ("+Integer.toString(pom)+", '" +fieldName.getText()+"', '"+fieldAuthor.getText()+"', '"+fieldGendre.getText()+"', '"+fieldMaterial.getText()+"', "+fieldUSD.getText()+", "+checkboxMP.isSelected()+")";
            int dodanie = st.executeUpdate(dodaj);
            //tPole.setText("Dodano nowa rzezbe");
            labelInfo.setText("Dodano nowa rzezbe");
        } catch (Exception ex) {
            labelInfo.setText("Nie udalo sie dodac nowej rzezby");
        }
    }//GEN-LAST:event_bttnAddSculptureActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dbDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dbDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dbDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dbDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dbDodaj().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnAddSculpture;
    private javax.swing.JCheckBox checkboxMP;
    private javax.swing.JTextField fieldAuthor;
    private javax.swing.JTextField fieldGendre;
    private javax.swing.JTextField fieldMaterial;
    private javax.swing.JTextField fieldName;
    private javax.swing.JTextField fieldUSD;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelInfo;
    // End of variables declaration//GEN-END:variables
}
